#!/bin/bash
# SPDX-License-Identifier: GPL-2.0+
# Copyright (c) 2022 Hannnes Reinecke, SUSE Software Products LLC
#
# Functions and global variables used to setup and remove nvme target

. common/shellcheck

_setup_nvmet() {
	_register_test_cleanup _cleanup_nvmet
	modprobe nvmet
	if [[ "${nvme_trtype}" != "loop" ]]; then
		modprobe nvmet-"${nvme_trtype}"
	fi
	modprobe nvme-"${nvme_trtype}"
	if [[ "${nvme_trtype}" == "rdma" ]]; then
		start_soft_rdma
		for i in $(rdma_network_interfaces)
		do
			ipv4_addr=$(get_ipv4_addr "$i")
			if [ -n "${ipv4_addr}" ]; then
				def_traddr=${ipv4_addr}
			fi
		done
	fi
}

_cleanup_nvmet() {
	local dev
	local port
	local subsys
	local transport
	local name

	if [[ ! -d "${NVMET_CFS}" ]]; then
		return 0
	fi

	# Don't let successive Ctrl-Cs interrupt the cleanup processes
	trap '' SIGINT

	shopt -s nullglob

	for dev in /sys/class/nvme/nvme*; do
		dev="$(basename "$dev")"
		transport="$(cat "/sys/class/nvme/${dev}/transport")"
		if [[ "$transport" == "${nvme_trtype}" ]]; then
			echo "WARNING: Test did not clean up ${nvme_trtype} device: ${dev}"
			_nvme_disconnect_ctrl "${dev}"
		fi
	done

	for port in "${NVMET_CFS}"/ports/*; do
		name=$(basename "${port}")
		echo "WARNING: Test did not clean up port: ${name}"
		rm -f "${port}"/subsystems/*
		rmdir "${port}"
	done

	for subsys in "${NVMET_CFS}"/subsystems/*; do
		name=$(basename "${subsys}")
		echo "WARNING: Test did not clean up subsystem: ${name}"
		for ns in "${subsys}"/namespaces/*; do
			rmdir "${ns}"
		done
		rmdir "${subsys}"
	done

	shopt -u nullglob
	trap SIGINT

	modprobe -r nvme-"${nvme_trtype}" 2>/dev/null
	if [[ "${nvme_trtype}" != "loop" ]]; then
		modprobe -r nvmet-"${nvme_trtype}" 2>/dev/null
	fi
	modprobe -r nvmet 2>/dev/null
	if [[ "${nvme_trtype}" == "rdma" ]]; then
		stop_soft_rdma
	fi
}

_create_nvmet_port() {
	local trtype="$1"
	local traddr="${2:-$def_traddr}"
	local adrfam="${3:-$def_adrfam}"
	local trsvcid="${4:-$def_trsvcid}"

	local port
	for ((port = 0; ; port++)); do
		if [[ ! -e "${NVMET_CFS}/ports/${port}" ]]; then
			break
		fi
	done

	mkdir "${NVMET_CFS}/ports/${port}"
	echo "${trtype}" > "${NVMET_CFS}/ports/${port}/addr_trtype"
	echo "${traddr}" > "${NVMET_CFS}/ports/${port}/addr_traddr"
	echo "${adrfam}" > "${NVMET_CFS}/ports/${port}/addr_adrfam"
	echo "${trsvcid}" > "${NVMET_CFS}/ports/${port}/addr_trsvcid"

	echo "${port}"
}

_remove_nvmet_port() {
	local port="$1"
	rmdir "${NVMET_CFS}/ports/${port}"
}
