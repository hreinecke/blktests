#!/bin/bash
# SPDX-License-Identifier: GPL-3.0+
# Copyright (C) 2019 Logan Gunthorpe
#
# Test nvme discovery generation counter

. tests/nvmeof-tcp/rc

DESCRIPTION="Test re-authentication for TCP connection via localhost"
QUICK=1

requires() {
	_nvme_requires
	_have_modules loop
	_require_nvme_trtype_is_fabrics
}


test() {
	local port
	local genctr
	local subsys="blktests-subsystem-"
	local hostid="$(uuidgen)"
	local hostnqn="nqn.2014-08.org.nvmexpress:uuid:${hostid}"
	local scratch="/tmp/blktest-ns1.img"
	local hostkey

	echo "Running ${TEST_NAME}"

	hostkey="$(nvme gen-dhchap-key -n ${subsys}1 2> /dev/null)"
	if [ $? -ne 0 ] ; then
		echo "nvme gen-dhchap-key command missing"
		return 1
	fi

	ctrlkey="$(nvme gen-dhchap-key -n ${subsys}1 2> /dev/null)"
	if [ $? -ne 0 ] ; then
		echo "nvme gen-dhchap-key command missing"
		return 1
	fi

	_setup_nvmet

	truncate -s 512M "${scratch}"

	port="$(_create_nvmet_port "${nvme_trtype}")"

	_create_nvmet_subsystem "${subsys}1" "${scratch}"
	_add_nvmet_subsys_to_port "${port}" "${subsys}1"
	_create_nvmet_host "${subsys}1" "${hostnqn}" "${hostkey}"

	_set_nvmet_dhgroup "${hostnqn}" "ffdhe2048"
	_set_nvmet_ctrlkey "${hostnqn}" "${ctrlkey}"
	
	nvme connect -t "${nvme_trtype}" -n "${subsys}1" \
	     -a "${def_traddr}" -s "${def_trsvcid}" \
	     -S "${hostkey}" -C "${ctrlkey}" \
	     --hostnqn="${hostnqn}" --hostid="${hostid}"

	nvme list-subsys

	ctrl=$(_find_nvme_dev "${subsys}1")

	echo "Re-authenticate with original host key"

	echo "${hostkey}" > /sys/class/nvme/${ctrl}/dhchap_key

	echo "Renew host key on the controller"

	new_hostkey="$(nvme gen-dhchap-key -n ${subsys}1 2> /dev/null)"

	_set_nvmet_hostkey "${hostnqn}" "${new_hostkey}"

	echo "Re-authenticate with original host key (should fail)"

	echo "${hostkey}" > /sys/class/nvme/${ctrl}/dhchap_key

	echo "Re-authenticate with new host key"

	echo "${new_hostkey}" > /sys/class/nvme/${ctrl}/dhchap_key

	nvme disconnect -n "${subsys}1"

	_remove_nvmet_subsystem_from_port "${port}" "${subsys}1"
	_remove_nvmet_subsystem "${subsys}1"

	_remove_nvmet_port "${port}"

	_remove_nvmet_host "${hostnqn}"

	rm ${scratch}

	echo "Test complete"
}
