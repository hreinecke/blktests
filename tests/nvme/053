#!/bin/bash
# SPDX-License-Identifier: GPL-3.0+
# Copyright (C) 2024 Martin Wilck, SUSE LLC
#
# Repeatedly rescans nvme controllers while doing IO on an nvme namespace
# connected to these controllers, and make sure that no I/O errors or data
# corruption occurs.

. tests/nvme/rc

DESCRIPTION="test controller rescan under I/O load"
TIMED=1
: "${TIMEOUT:=60}"

rescan_controller() {
	local path
	path="$1/rescan_controller"

	[[ -f "$path" ]] || {
		echo "cannot rescan $1"
		return 1
	}

	awk -f "$TMPDIR/rescan.awk" \
	    -v path="$path" -v timeout="$TIMEOUT" -v seed="$2" &
}

create_rescan_script() {
	cat >"$TMPDIR/rescan.awk" <<EOF
@load "time"

BEGIN {
    srand(seed);
    finish = gettimeofday() + strtonum(timeout);
    while (gettimeofday() < finish) {
	sleep(0.1 + 5 * rand());
	printf("1\n") > path;
	close(path);
    }
}
EOF
}

test_device() {
	local -a ctrls
	local i st line

	echo "Running ${TEST_NAME}"
	create_rescan_script

	_nvme_get_ctrl_list ctrls

	_run_fio_verify_io --filename="$TEST_DEV" --time_based &> "$FULL" &

	for i in "${!ctrls[@]}"; do
		rescan_controller "${ctrls[$i]}" "$i"
	done

	while true; do
		wait -n &>/dev/null
		st=$?
		case $st in
			127)
				break
				;;
			0)
				;;
			*)
				echo "child process exited with $st!"
				;;
		esac
	done

	echo "Test complete"
}
